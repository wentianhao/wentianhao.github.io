<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wanheo</title>
  <icon>https://wentianhao.github.io/icon.png</icon>
  
  <link href="https://wentianhao.github.io/atom.xml" rel="self"/>
  
  <link href="https://wentianhao.github.io/"/>
  <updated>2021-08-25T04:54:38.401Z</updated>
  <id>https://wentianhao.github.io/</id>
  
  <author>
    <name>先逃跑再说</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线程池实践</title>
    <link href="https://wentianhao.github.io/2021/08/25/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E8%B7%B5/"/>
    <id>https://wentianhao.github.io/2021/08/25/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E8%B7%B5/</id>
    <published>2021-08-25T01:58:47.000Z</published>
    <updated>2021-08-25T04:54:38.401Z</updated>
    
    
    <summary type="html">&lt;p&gt;线程池提供一种限制和管理资源(包括执行一个任务)。每个线程池还维护一些基本统计信息，例如已完成任务的数量&lt;/p&gt;
&lt;p&gt;线程池的好处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;降低资源的消耗&lt;/li&gt;
&lt;li&gt;提高相应速度&lt;/li&gt;
&lt;li&gt;提高线程的可管理性&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-表单验证-统一异常处理-自定义验证信息源</title>
    <link href="https://wentianhao.github.io/2021/08/20/validation/"/>
    <id>https://wentianhao.github.io/2021/08/20/validation/</id>
    <published>2021-08-20T13:29:16.000Z</published>
    <updated>2021-08-22T07:09:09.399Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前端验证一般是为了满足界面的友好性、客户体验性等，但仅靠前端进行数据合法性校验，是不够的。因为非法用户可能会直接从客户端获取请求地址进行非法请求，所以后端的校验是必不可少的。&lt;/p&gt;
&lt;p&gt;在书写业务逻辑时，经常有大量的判空校验。比如Service层或Dao层的方法入参、入</summary>
        
      
    
    
    
    <category term="spring boot" scheme="https://wentianhao.github.io/categories/spring-boot/"/>
    
    
    <category term="spring boot" scheme="https://wentianhao.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>线程池</title>
    <link href="https://wentianhao.github.io/2021/08/18/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    <id>https://wentianhao.github.io/2021/08/18/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</id>
    <published>2021-08-18T08:07:41.000Z</published>
    <updated>2021-08-24T13:43:25.382Z</updated>
    
    
    <summary type="html">&lt;p&gt;详细分析线程池&lt;/p&gt;
&lt;p&gt;使用线程池的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;降低资源消耗：通过重复使用已创建的线程降低线程创建和销毁的消耗&lt;/li&gt;
&lt;li&gt;提高资源利用率：当任务到达时，可以不需要创建线程就立即执行&lt;/li&gt;
&lt;li&gt;提高线程的可管理性：线程池可以统一分配，调优和监控</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java必知必会</title>
    <link href="https://wentianhao.github.io/2021/08/14/Java%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/"/>
    <id>https://wentianhao.github.io/2021/08/14/Java%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</id>
    <published>2021-08-14T04:18:13.000Z</published>
    <updated>2021-08-14T15:58:30.823Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;概括Java基础、Java异常、Java集合、Java并发、Java JVM、SSM框架、MySQL、Redis、计算机网络、操作系统、消息队列与分布式&lt;/p&gt;
&lt;!-- more  --&gt;

&lt;h2 id=&quot;Java基础-44道&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>并发进阶</title>
    <link href="https://wentianhao.github.io/2021/08/11/%E5%B9%B6%E5%8F%91%E8%BF%9B%E9%98%B6/"/>
    <id>https://wentianhao.github.io/2021/08/11/%E5%B9%B6%E5%8F%91%E8%BF%9B%E9%98%B6/</id>
    <published>2021-08-11T01:56:24.000Z</published>
    <updated>2021-08-22T14:00:51.348Z</updated>
    
    
    <summary type="html">&lt;p&gt;进一步补充并发知识&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>并发基础</title>
    <link href="https://wentianhao.github.io/2021/08/10/%E5%B9%B6%E5%8F%91/"/>
    <id>https://wentianhao.github.io/2021/08/10/%E5%B9%B6%E5%8F%91/</id>
    <published>2021-08-10T02:35:51.000Z</published>
    <updated>2021-08-10T15:28:29.548Z</updated>
    
    
    <summary type="html">&lt;p&gt;java 并发基础&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ConcurrentHashMap</title>
    <link href="https://wentianhao.github.io/2021/08/07/ConcurrentHashMap/"/>
    <id>https://wentianhao.github.io/2021/08/07/ConcurrentHashMap/</id>
    <published>2021-08-07T09:09:35.000Z</published>
    <updated>2021-08-10T16:43:51.147Z</updated>
    
    
    <summary type="html">&lt;p&gt;ConcurrentHashMap，线程安全的HashMap。&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>LinkedList源码分析</title>
    <link href="https://wentianhao.github.io/2021/08/04/LinkedList/"/>
    <id>https://wentianhao.github.io/2021/08/04/LinkedList/</id>
    <published>2021-08-04T09:59:43.000Z</published>
    <updated>2021-08-05T05:37:53.324Z</updated>
    
    
    <summary type="html">&lt;pre class=&quot;language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractSequentialList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Deque&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Cloneable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;Serializable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;LinkedList是一个继承于AbstractSequentialList的双向链表&lt;/li&gt;
&lt;li&gt;LinkedList可以被当作堆栈、队列或双端队列进行操作&lt;/li&gt;
&lt;li&gt;LinkedList实现List接口，能对它进行队列操作&lt;/li&gt;
&lt;li&gt;LinkedList实现Deque接口，能将其当作双端队列使用&lt;/li&gt;
&lt;li&gt;LinkedList实现CLoneable接口，即覆盖clone函数，能克隆&lt;/li&gt;
&lt;li&gt;LinkedList实现java.io.Serializable接口，支持序列化&lt;/li&gt;
&lt;li&gt;LinkedList非同步的，不是线程安全的，如果想使LinkedList变成线程安全的，可以调用静态类Collections类中的synchronizedList方法；&lt;code&gt;List list= Collections.synchronizedList(new LinkedList());&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://whh.plus:7007/image/r4k&quot;&gt;&lt;img src=&quot;http://whh.plus:7007/images/2021/08/04/47ba0f0d8b574a4460b5574e78352032.md.jpg&quot; alt=&quot;47ba0f0d8b574a4460b5574e78352032.md.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ArrayList源码分析</title>
    <link href="https://wentianhao.github.io/2021/08/03/ArrayList/"/>
    <id>https://wentianhao.github.io/2021/08/03/ArrayList/</id>
    <published>2021-08-03T08:52:58.000Z</published>
    <updated>2021-08-04T05:30:25.741Z</updated>
    
    
    <summary type="html">&lt;p&gt;感觉ArrayList源码分析还是要单独开一章博客，在容器里写的话有点冗余&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java集合框架</title>
    <link href="https://wentianhao.github.io/2021/08/01/%E5%AE%B9%E5%99%A8/"/>
    <id>https://wentianhao.github.io/2021/08/01/%E5%AE%B9%E5%99%A8/</id>
    <published>2021-08-01T06:39:27.000Z</published>
    <updated>2021-08-10T16:43:51.170Z</updated>
    
    
    <summary type="html">&lt;p&gt;Java集合框架：List、Set、Map 以及源码解析&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>IO</title>
    <link href="https://wentianhao.github.io/2021/07/31/IO/"/>
    <id>https://wentianhao.github.io/2021/07/31/IO/</id>
    <published>2021-07-31T02:45:35.000Z</published>
    <updated>2021-07-31T10:38:21.504Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I/O(Input/Output):输入/输出&lt;/p&gt;
&lt;p&gt;根据冯.诺伊曼结构，计算机结构分为5大部分：运算器、控制器、存储器、输入设备、输出设备&lt;/p&gt;
&lt;p&gt;输入设备(input device) –&amp;gt; (cpu(控制器、运算器) &amp;lt; – &amp;gt;</summary>
        
      
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>代理模式</title>
    <link href="https://wentianhao.github.io/2021/07/30/proxy/"/>
    <id>https://wentianhao.github.io/2021/07/30/proxy/</id>
    <published>2021-07-30T01:44:12.000Z</published>
    <updated>2021-07-31T02:29:51.735Z</updated>
    
    
    <summary type="html">&lt;p&gt;设计模型之代理模式&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>反射机制</title>
    <link href="https://wentianhao.github.io/2021/07/30/invoke/"/>
    <id>https://wentianhao.github.io/2021/07/30/invoke/</id>
    <published>2021-07-30T01:03:10.000Z</published>
    <updated>2021-07-30T01:07:14.452Z</updated>
    
    
    <summary type="html">&lt;p&gt;详细学习一下Java的反射机制&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java常见关键字总结</title>
    <link href="https://wentianhao.github.io/2021/07/28/keyword/"/>
    <id>https://wentianhao.github.io/2021/07/28/keyword/</id>
    <published>2021-07-28T10:38:08.000Z</published>
    <updated>2021-07-30T01:07:14.457Z</updated>
    
    
    <summary type="html">&lt;p&gt;final、static、this、super关键字总结&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java常量池</title>
    <link href="https://wentianhao.github.io/2021/07/22/java%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    <id>https://wentianhao.github.io/2021/07/22/java%E5%B8%B8%E9%87%8F%E6%B1%A0/</id>
    <published>2021-07-22T02:39:46.000Z</published>
    <updated>2021-07-23T08:20:58.086Z</updated>
    
    
    <summary type="html">&lt;p&gt;对常量池理解的补充说明&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>HashMap源码解读</title>
    <link href="https://wentianhao.github.io/2021/07/21/hashmap/"/>
    <id>https://wentianhao.github.io/2021/07/21/hashmap/</id>
    <published>2021-07-21T12:00:00.000Z</published>
    <updated>2021-08-10T16:43:51.154Z</updated>
    
    
    <summary type="html">&lt;p&gt;阿里面试：详细描述一下HashMap中put方法的整个过程&lt;/p&gt;
&lt;p&gt;京东面试：HashMap扩容的标准和扩容的过程怎么实现&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java基础</title>
    <link href="https://wentianhao.github.io/2021/07/20/java%E5%9F%BA%E7%A1%80/"/>
    <id>https://wentianhao.github.io/2021/07/20/java%E5%9F%BA%E7%A1%80/</id>
    <published>2021-07-20T13:19:46.000Z</published>
    <updated>2021-08-03T09:47:37.636Z</updated>
    
    
    <summary type="html">&lt;p&gt;Java基础概念与常识，学习自用，参考&lt;a href=&quot;https://snailclimb.gitee.io/javaguide&quot;&gt;JavaGuide&lt;/a&gt; JavaGuide yyds！&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="https://wentianhao.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://wentianhao.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot注解</title>
    <link href="https://wentianhao.github.io/2021/07/11/SpringBoot%E6%B3%A8%E8%A7%A3/"/>
    <id>https://wentianhao.github.io/2021/07/11/SpringBoot%E6%B3%A8%E8%A7%A3/</id>
    <published>2021-07-11T02:53:48.000Z</published>
    <updated>2021-07-15T09:05:15.476Z</updated>
    
    
    <summary type="html">&lt;p&gt;使用注解的优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采用Java代码，不需要配置繁杂的xml文件&lt;/li&gt;
&lt;li&gt;在配置中也可享受面向对象带来的好处&lt;/li&gt;
&lt;li&gt;类型安全对重构可以提供良好的支持&lt;/li&gt;
&lt;li&gt;减少复杂配置文件的同时亦能享受到springIoC容器提供的功能</summary>
    
    
    
    <category term="SpringBoot" scheme="https://wentianhao.github.io/categories/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="https://wentianhao.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>服务器自建图床</title>
    <link href="https://wentianhao.github.io/2021/07/05/%E5%9B%BE%E5%BA%8A/"/>
    <id>https://wentianhao.github.io/2021/07/05/%E5%9B%BE%E5%BA%8A/</id>
    <published>2021-07-05T10:53:03.000Z</published>
    <updated>2021-07-31T08:06:35.105Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近着手搭建一个自用的图床，之前以有博客，图片一般存在博客的某个文件夹下，但是每次写博客的时候都要先将图片上传到服务器然后配图不能本地显示略嫌麻烦，因此准备在自己网站上搭建图床，使用docker，结合开源项目Lychee&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充发现&lt;/strong&gt;：Chevereto 图床更好用，并且可以结合picGo自动上传，因此建议转为Chevereto    演示地址：&lt;a href=&quot;https://demo.chevereto.com/&quot;&gt;https://demo.chevereto.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下操作基于：Ubuntu 18.04&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://wentianhao.github.io/categories/docker/"/>
    
    
    <category term="图床" scheme="https://wentianhao.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>json</title>
    <link href="https://wentianhao.github.io/2021/06/28/json/"/>
    <id>https://wentianhao.github.io/2021/06/28/json/</id>
    <published>2021-06-28T05:55:21.000Z</published>
    <updated>2021-06-30T08:33:13.260Z</updated>
    
    
    <summary type="html">&lt;p&gt;JSON必知必会&lt;/p&gt;</summary>
    
    
    
    <category term="json" scheme="https://wentianhao.github.io/categories/json/"/>
    
    
    <category term="json" scheme="https://wentianhao.github.io/tags/json/"/>
    
  </entry>
  
</feed>
